// Generated by view binder compiler. Do not edit!
package com.example.miraclepack.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.miraclepack.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPasswordresetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatButton buttonPasswordReset;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final EditText editTextRepeatPassword;

  private FragmentPasswordresetBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatButton buttonPasswordReset, @NonNull EditText editTextEmail,
      @NonNull EditText editTextPassword, @NonNull EditText editTextRepeatPassword) {
    this.rootView = rootView;
    this.buttonPasswordReset = buttonPasswordReset;
    this.editTextEmail = editTextEmail;
    this.editTextPassword = editTextPassword;
    this.editTextRepeatPassword = editTextRepeatPassword;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPasswordresetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPasswordresetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_passwordreset, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPasswordresetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonPasswordReset;
      AppCompatButton buttonPasswordReset = ViewBindings.findChildViewById(rootView, id);
      if (buttonPasswordReset == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      EditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      EditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextRepeatPassword;
      EditText editTextRepeatPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextRepeatPassword == null) {
        break missingId;
      }

      return new FragmentPasswordresetBinding((RelativeLayout) rootView, buttonPasswordReset,
          editTextEmail, editTextPassword, editTextRepeatPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
